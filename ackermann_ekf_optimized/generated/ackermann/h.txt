[X - sensor_y*(cos(Roll)*sin(Yaw) - cos(Yaw)*sin(Pitch)*sin(Roll)) + sensor_z*(sin(Roll)*sin(Yaw) + cos(Roll)*cos(Yaw)*sin(Pitch)) + sensor_x*cos(Pitch)*cos(Yaw); Y + sensor_y*(cos(Roll)*cos(Yaw) + sin(Pitch)*sin(Roll)*sin(Yaw)) - sensor_z*(cos(Yaw)*sin(Roll) - cos(Roll)*sin(Pitch)*sin(Yaw)) + sensor_x*cos(Pitch)*sin(Yaw); Z - sensor_x*sin(Pitch) + sensor_z*cos(Pitch)*cos(Roll) + sensor_y*cos(Pitch)*sin(Roll); speed*(dpitch_dx*sensor_z - dyaw_dx*sensor_y + 1); -speed*(droll_dx*sensor_z - dyaw_dx*sensor_x); -speed*(dpitch_dx*sensor_x - droll_dx*sensor_y); accel + accel*dpitch_dx*sensor_z - accel*dyaw_dx*sensor_y - dpitch_dx*speed*(dpitch_dx*sensor_x*speed - droll_dx*sensor_y*speed) + dyaw_dx*speed*(droll_dx*sensor_z*speed - dyaw_dx*sensor_x*speed); 2*dyaw_dx*speed^2 - accel*droll_dx*sensor_z + accel*dyaw_dx*sensor_x + droll_dx*speed*(dpitch_dx*sensor_x*speed - droll_dx*sensor_y*speed) + dyaw_dx*speed*(dpitch_dx*sensor_z*speed - dyaw_dx*sensor_y*speed); accel*droll_dx*sensor_y - accel*dpitch_dx*sensor_x - 2*dpitch_dx*speed^2 - dpitch_dx*speed*(dpitch_dx*sensor_z*speed - dyaw_dx*sensor_y*speed) - droll_dx*speed*(droll_dx*sensor_z*speed - dyaw_dx*sensor_x*speed); Roll; Pitch; Yaw; droll_dx*speed; dpitch_dx*speed; dyaw_dx*speed]