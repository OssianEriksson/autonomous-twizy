<<: !include $(rospack find twizy_bringup)/params/include/costmap_common_params.yaml

!variable physical : !include $(rospack find twizy_description)/config/physical.yaml

obstacle_layer:
  obstacle_range: 8.5
  raytrace_range: 9.0
  max_obstacle_height: !eval physical['total_height'] + 0.2

  observation_sources: lidar_points

  lidar_points: 
    sensor_frame: lidar_vlp16
    data_type: PointCloud2
    topic: /lidar/points
    min_obstacle_height: 0.2
    marking: true
    clearing: true

inflater_layer:
  inflation_radius: 3.0
  cost_scaling_factor: 2

plugins:
- {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
- {name: inflater_layer, type: "costmap_2d::InflationLayer"}

update_frequency: 1.0
rolling_window: true

# The width, and height are needed so there aren't complaints when a goal
# outside the global map is selected (we increase the global map size so
# this never happens). This behavious has been labeled a bug in navfn
# (see https://answers.ros.org/question/89946/the-goal-sent-to-the-navfn-
# planner-is-off-the-global-costmap-how-to-send-a-goal-more-than-10-meters-
# away-from-the-robot/), but is still a thing in global_planner
width: 100.0
height: 100.0
resolution: 2.0