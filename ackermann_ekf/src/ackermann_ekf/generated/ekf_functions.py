# =============================================================================
# | This document was autogenerated by python from                            |
# | /home/ossian/autonomous-twizy/src/ackermann_ekf/tools/ekf_functions.py    |
# | EDITING THIS FILE BY HAND IS NOT RECOMMENDED                              |
# =============================================================================

from numpy import array
from math import *

def f(_Dummy_1925, dt):
    [[x], [y], [z], [v], [a], [R], [P], [Y], [dr_dx], [dp_dx], [dy_dx]] = _Dummy_1925
    return (array([[(1/2)*dt**2*(a*cos(P)*cos(Y) - v**2*(dp_dx*sin(P)*cos(R)*cos(Y) + dp_dx*sin(R)*sin(Y) - dy_dx*sin(P)*sin(R)*cos(Y) + dy_dx*sin(Y)*cos(R))) + dt*v*cos(P)*cos(Y) + x], [(1/2)*dt**2*(a*sin(Y)*cos(P) + v**2*(-dp_dx*sin(P)*sin(Y)*cos(R) + dp_dx*sin(R)*cos(Y) + dy_dx*sin(P)*sin(R)*sin(Y) + dy_dx*cos(R)*cos(Y))) + dt*v*sin(Y)*cos(P) + y], [-1/2*dt**2*(a*sin(P) + v**2*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P)) - dt*v*sin(P) + z], [a*dt + v], [a], [dp_dx*dt*v*sin(R)*tan(P) + dr_dx*dt*v + dt*dy_dx*v*cos(R)*tan(P) + atan2(sin(R)*cos(P), cos(P)*cos(R))], [(dt*v*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P) + sqrt(cos(P)**2)*asin(sin(P)))/sqrt(cos(P)**2)], [(dp_dx*dt*v*sin(R) + dt*dy_dx*v*cos(R) + cos(P)*atan2(sin(Y)*cos(P), cos(P)*cos(Y)))/cos(P)], [dr_dx], [dp_dx], [dy_dx]]))


def F(_Dummy_1926, dt):
    [[x], [y], [z], [v], [a], [R], [P], [Y], [dr_dx], [dp_dx], [dy_dx]] = _Dummy_1926
    return (array([[1, 0, 0, dt*(-dt*v*(dp_dx*sin(P)*cos(R)*cos(Y) + dp_dx*sin(R)*sin(Y) - dy_dx*sin(P)*sin(R)*cos(Y) + dy_dx*sin(Y)*cos(R)) + cos(P)*cos(Y)), (1/2)*dt**2*cos(P)*cos(Y), (1/2)*dt**2*v**2*(dp_dx*sin(P)*sin(R)*cos(Y) - dp_dx*sin(Y)*cos(R) + dy_dx*sin(P)*cos(R)*cos(Y) + dy_dx*sin(R)*sin(Y)), -1/2*dt*(dt*(a*sin(P) + v**2*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P)) + 2*v*sin(P))*cos(Y), (1/2)*dt*(dt*(-a*sin(Y)*cos(P) + v**2*(dp_dx*sin(P)*sin(Y)*cos(R) - dp_dx*sin(R)*cos(Y) - dy_dx*sin(P)*sin(R)*sin(Y) - dy_dx*cos(R)*cos(Y))) - 2*v*sin(Y)*cos(P)), 0, -1/2*dt**2*v**2*(sin(P)*cos(R)*cos(Y) + sin(R)*sin(Y)), (1/2)*dt**2*v**2*(sin(P)*sin(R)*cos(Y) - sin(Y)*cos(R))], [0, 1, 0, dt*(dt*v*(-dp_dx*sin(P)*sin(Y)*cos(R) + dp_dx*sin(R)*cos(Y) + dy_dx*sin(P)*sin(R)*sin(Y) + dy_dx*cos(R)*cos(Y)) + sin(Y)*cos(P)), (1/2)*dt**2*sin(Y)*cos(P), (1/2)*dt**2*v**2*(dp_dx*sin(P)*sin(R)*sin(Y) + dp_dx*cos(R)*cos(Y) + dy_dx*sin(P)*sin(Y)*cos(R) - dy_dx*sin(R)*cos(Y)), -1/2*dt*(dt*(a*sin(P) + v**2*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P)) + 2*v*sin(P))*sin(Y), (1/2)*dt*(dt*(a*cos(P)*cos(Y) + v**2*(-dp_dx*sin(P)*cos(R)*cos(Y) - dp_dx*sin(R)*sin(Y) + dy_dx*sin(P)*sin(R)*cos(Y) - dy_dx*sin(Y)*cos(R))) + 2*v*cos(P)*cos(Y)), 0, (1/2)*dt**2*v**2*(-sin(P)*sin(Y)*cos(R) + sin(R)*cos(Y)), (1/2)*dt**2*v**2*(sin(P)*sin(R)*sin(Y) + cos(R)*cos(Y))], [0, 0, 1, -dt*(dt*v*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P) + sin(P)), -1/2*dt**2*sin(P), (1/2)*dt**2*v**2*(dp_dx*sin(R) + dy_dx*cos(R))*cos(P), (1/2)*dt*(dt*(-a*cos(P) + v**2*(dp_dx*cos(R) - dy_dx*sin(R))*sin(P)) - 2*v*cos(P)), 0, 0, -1/2*dt**2*v**2*cos(P)*cos(R), (1/2)*dt**2*v**2*sin(R)*cos(P)], [0, 0, 0, 1, dt, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, dt*(dp_dx*sin(R)*tan(P) + dr_dx + dy_dx*cos(R)*tan(P)), 0, dp_dx*dt*v*cos(R)*tan(P) - dt*dy_dx*v*sin(R)*tan(P) + 1, dt*v*(dp_dx*sin(R) + dy_dx*cos(R))/cos(P)**2, 0, dt*v, dt*v*sin(R)*tan(P), dt*v*cos(R)*tan(P)], [0, 0, 0, dt*(dp_dx*cos(R) - dy_dx*sin(R))*cos(P)/sqrt(cos(P)**2), 0, -dt*v*(dp_dx*sin(R) + dy_dx*cos(R))*cos(P)/sqrt(cos(P)**2), cos(P)/sqrt(cos(P)**2), 0, 0, dt*v*cos(P)*cos(R)/sqrt(cos(P)**2), -dt*v*sin(R)*cos(P)/sqrt(cos(P)**2)], [0, 0, 0, dt*(dp_dx*sin(R) + dy_dx*cos(R))/cos(P), 0, dt*v*(dp_dx*cos(R) - dy_dx*sin(R))/cos(P), dt*v*(dp_dx*sin(R) + dy_dx*cos(R))*sin(P)/cos(P)**2, 1, 0, dt*v*sin(R)/cos(P), dt*v*cos(R)/cos(P)], [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]))


def h(_Dummy_1927, _Dummy_1928):
    [[x], [y], [z], [v], [a], [R], [P], [Y], [dr_dx], [dp_dx], [dy_dx]] = _Dummy_1927
    [[hx], [hy], [hz]] = _Dummy_1928
    return (array([[hx*cos(P)*cos(Y) + hy*(sin(P)*sin(R)*cos(Y) - sin(Y)*cos(R)) + hz*(sin(P)*cos(R)*cos(Y) + sin(R)*sin(Y)) + x], [hx*sin(Y)*cos(P) + hy*(sin(P)*sin(R)*sin(Y) + cos(R)*cos(Y)) + hz*(sin(P)*sin(Y)*cos(R) - sin(R)*cos(Y)) + y], [-hx*sin(P) + hy*sin(R)*cos(P) + hz*cos(P)*cos(R) + z], [v], [a], [R], [P], [Y], [dr_dx*v], [dp_dx*v], [dy_dx*v]]))


def H(_Dummy_1929, _Dummy_1930):
    [[x], [y], [z], [v], [a], [R], [P], [Y], [dr_dx], [dp_dx], [dy_dx]] = _Dummy_1929
    [[hx], [hy], [hz]] = _Dummy_1930
    return (array([[1, 0, 0, 0, 0, hy*(sin(P)*cos(R)*cos(Y) + sin(R)*sin(Y)) - hz*(sin(P)*sin(R)*cos(Y) - sin(Y)*cos(R)), (-hx*sin(P) + hy*sin(R)*cos(P) + hz*cos(P)*cos(R))*cos(Y), -hx*sin(Y)*cos(P) - hy*(sin(P)*sin(R)*sin(Y) + cos(R)*cos(Y)) - hz*(sin(P)*sin(Y)*cos(R) - sin(R)*cos(Y)), 0, 0, 0], [0, 1, 0, 0, 0, hy*(sin(P)*sin(Y)*cos(R) - sin(R)*cos(Y)) - hz*(sin(P)*sin(R)*sin(Y) + cos(R)*cos(Y)), (-hx*sin(P) + hy*sin(R)*cos(P) + hz*cos(P)*cos(R))*sin(Y), hx*cos(P)*cos(Y) + hy*(sin(P)*sin(R)*cos(Y) - sin(Y)*cos(R)) + hz*(sin(P)*cos(R)*cos(Y) + sin(R)*sin(Y)), 0, 0, 0], [0, 0, 1, 0, 0, (hy*cos(R) - hz*sin(R))*cos(P), -hx*cos(P) - hy*sin(P)*sin(R) - hz*sin(P)*cos(R), 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0], [0, 0, 0, dr_dx, 0, 0, 0, 0, v, 0, 0], [0, 0, 0, dp_dx, 0, 0, 0, 0, 0, v, 0], [0, 0, 0, dy_dx, 0, 0, 0, 0, 0, 0, v]]))