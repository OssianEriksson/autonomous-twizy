#!/usr/bin/python3

import rospy
from ackermann_msgs.msg import AckermannDriveStamped
from geometry_msgs.msg import Twist


def main():
    # Initialize ROS node
    rospy.init_node('converter')

    # Read parameters from ROS parameter server
    max_steering_angle = rospy.get_param('~max_steering_angle')
    frame_id = rospy.get_param('~frame_id', 'odom')

    def cmd_callback(data):
        msg = AckermannDriveStamped()
        msg.header.stamp = rospy.Time.now()
        msg.header.frame_id = frame_id
        # The cmd_angle_instead_rotvel parameter of teb_local_planner modifies
        # the Twist message on the cmd_vel topic to contain absolute steering
        # angle in its angular component instead of angular velocity
        msg.drive.steering_angle = min(
            max(data.angular.z, -max_steering_angle), max_steering_angle)
        msg.drive.speed = data.linear.x

        pub.publish(msg)

    rospy.Subscriber('cmd_vel', Twist, cmd_callback, queue_size=1)
    pub = rospy.Publisher('ackermann_cmd', AckermannDriveStamped, queue_size=1)

    try:
        rospy.spin()
    except rospy.ROSInterruptException:
        pass


if __name__ == '__main__':
    main()
